library(tidyverse)
dat <- read_csv("https://raw.githubusercontent.com/BrighamEaquinto/brighameaquinto.github.io/master/datasets/insurance.csv")
# Examples 1: Average BMI by Gender
dat %>%
group_by(sex) %>%
summarise(Average_Age = mean(age))
# Examples 2: Average BMI by Age
dat %>%
group_by(age) %>%
summarise(mean(bmi)) %>%
head()
# Exercise 1: Sum of Charges by Region
dat %>%
group_by(region) %>%
summarise(Total_Charges = sum(charges))
# Exercise 3: Average Charges by Sex and by Smoker
dat %>%
group_by(sex, smoker) %>%
summarise(
Average_Charges = mean(charges),
Total_Charges = sum(charges))
# Exercise 4: Storm Dataset - Wind and Air Pressure
storms %>%
group_by(category) %>%
summarise(
mean(wind),
sd(wind),
mean(pressure),
sd(pressure)
) %>% knitr::kable()
# Exercise 5: Summarizing by Month
storms %>%
group_by(month) %>%
summarise(
Mean_Wind = mean(wind),
Median = median(wind),
St_Dev = sd(wind)
)
# Exercise 6: Airquality Dataset - Summarising by Month
airquality %>%
group_by(Month) %>%
summarise(
Mean_Wind = mean(Wind),
Median = median(Wind),
St_Dev = sd(Wind)
)
library(tidyverse)
bob <- read_csv("https://raw.githubusercontent.com/BrighamEaquinto/brighameaquinto.github.io/master/datasets/StudentsPerformance.csv") %>%
mutate(parent_education=`parental level of education`) %>%
select(!`parental level of education`)
# Histogram: Counting the Number of Numeric Occurances
ggplot(dat, aes(x=bmi))+
geom_histogram(bins = 50)+
labs(
title="Y-Axis Auto Counts the\n Occurances of Each Number",
x="Numeric Column: 'bmi'")+
theme(axis.title = element_text(face="bold"))
# Exercise 1: Visualizing a Distribution using a Histogram
ggplot(data = bob, aes(x = `math score`))+
geom_histogram()
# Exercise 2: Visualizing Counts of School Degrees
ggplot(data = bob, aes(x = parent_education))+
geom_bar()
# Exercise 3: Scatter Plot to Visualize Test Scores
ggplot(data = bob, aes(x = `reading score`, y = writing score, color = gender))+
# Exercise 3: Scatter Plot to Visualize Test Scores
ggplot(data = bob, aes(x = `reading score`, y = writing score, color = gender))+
# Exercise 3: Scatter Plot to Visualize Test Scores
ggplot(data = bob, aes(x = `reading score`, y = `writing score`, color = gender))+
geom_point()
# Exercise 4: Visualizing Distribution using Boxplots
ggplot(bob, aes(lunch, `math score`))+
geom_histogram()
# Exercise 4: Visualizing Distribution using Boxplots
ggplot(bob, aes(lunch, `math score`))+
geom_boxplot()
# Exercise 5: Bar Chart
ggplot(data = bob, aes(x = lunch, fill = gender))+
geom_bar()
# Exercise 5: Bar Chart
ggplot(data = bob, aes(x = lunch))+
geom_bar()
# Exercise 6: Scatter Plot
ggplot(iris, aes(x = Petal.Width, y = Petal.Length, color = Species))+
geom_point()
# Exercise 7: Boxplot
ggplot(iris, aes(x = Species, y = Petal.Width, fill = Species))+
geom_boxplot()
# Exercise 8
ggplot(iris, aes(x = Petal.Length, y = count, fill = Species))+
geom_histogram()
# Exercise 8
ggplot(iris, aes(x = Petal.Length, fill = Species))+
geom_histogram()
library(tidyverse)
dat <- read_csv("https://raw.githubusercontent.com/BrighamEaquinto/brighameaquinto.github.io/master/datasets/insurance.csv")
# Labeling
ggplot(dat, aes(x = region, fill = sex))+
geom_bar()+
labs(title = "Counts of Regions", x = "Regions", y = "Amount", fill = "Sex")+
theme_bw()
# Faceting
ggplot(dat, aes(x = region, fill = sex))+
geom_bar()+
labs(title = "Non-Faceted Graph", x = "", y = "Amount", fill = "Sex")+
theme(
title = element_text(size = 20),
axis.title = element_text(size = 10),
legend.title = element_text(size = 10))
install.packages("languageserver")
q()
q()
"Hello World!"
5 + 5
"Hello World!"
plot(1:10)
4
8
12
16
cat("\014")
"Hello World!"
6 + 4
15 - 10
max(20, 30, 10)
min(30, 10, 20)
# numeric
x <- 10.5
class(x)
"Hello World!"
"Hello World!"
cat("\014")
"Hello World!"
num <- 3.14
class(num)
int <- 42L # L declares this as an integer
class(int)
char <- "Eat more chicken!"
class(char)
boolean <- TRUE
class(boolean)
int <- 1:10
int
int <- 1:10
int
class(int)
int <- 2:10
int
int <- 1:5
int
length(int)
char <- "Eat more chicken!"
length(char)
boolean <- TRUE
class(boolean)
num
int
char
boolean
comp <- 73 - 5i # "i" represents the imaginary component
comp
class(comp)
comp <- 73 + 5i # "i" represents the imaginary component
comp
class(comp)
# Incorporate at least one loop that works with lists or arrays.
games <- list("Chess", "Monopoly", "Battleship", "Uno", "Phase 10")
# Print every item in the list
for (x in games) {
print(x)
}
for (x in games) {
if (x == "Uno") {
break
}
print(x)
}
for (x in games) {
if (x == "Battleship") { # The loop will skip "Battleship" and continue to loop
next
}
print(x)
for (x in games) {
if (x == "Battleship") { # The loop will skip "Battleship" and continue to loop
next
}
print(x)
}
games <- list("Chess", "Monopoly", "Battleship", "Uno", "Phase 10")
for (x in games) {
if (x == "Battleship") { # The loop will skip "Battleship" and continue to loop
next
}
print(x)
games <- list("Chess", "Monopoly", "Battleship", "Uno", "Phase 10")
# Print every item in the list
for (x in games) {
print(x)
}
# Using a break statement, stop the loop before it has looped through all the items
for (x in games) {
if (x == "Uno") { # The loop will stop at "Uno"
break
}
print(x)
}
# Using a next statement, skip an iteration without terminating the loop
for (x in games) {
if (x == "Battleship") { # The loop will skip "Battleship" and continue to loop
next
}
print(x)
}
games <- list("Chess", "Monopoly", "Battleship", "Uno", "Phase 10")
# Print every item in the list
for (x in games) {
print(x)
}
cat("\014")
games <- list("Chess", "Monopoly", "Battleship", "Uno", "Phase 10")
# Print every item in the list
for (x in games) {
print(x)
}
for (x in games) {
if (x == "Uno") { # The loop will stop at "Uno"
break
}
print(x)
}
for (x in games) {
if (x == "Battleship") { # The loop will skip "Battleship" and continue to loop
next
}
print(x)
}
"Hello World!"
"Hello World!"
# Create a data frame
NSMBWii_Enemies <- data.frame (
Enemy_Name = c("Goomba", "Cheep Cheep", "Piranha Plant"),
First_Appearance = c("W 1-1", "W 1-4", "W 1-2"),
Last_Appearance = c("W 9-8", "W 8-4", "W 9-7")
)
# Print the data frame
NSMBWii_Enemies
# Summarize the data from the data frame
summary(NSMBWii_Enemies)
# Create a data frame
NSMBWii_Enemies <- data.frame (
Enemy_Name = c("Goomba", "Cheep Cheep", "Piranha Plant"),
First_Appearance = c("W 1-1", "W 1-4", "W 1-2"),
Last_Appearance = c("W 9-8", "W 8-4", "W 9-7")
)
# Print the data frame
# NSMBWii_Enemies
# Summarize the data from the data frame
# summary(NSMBWii_Enemies)
# Add a new row to the data frame
New_Row_Enemy <- rbind(NSMBWii_Enemies, c("Swoop", "W 5-2", "W 6-6"))
# Print the new row
New_Row_Enemy
# Create a data frame
NSMBWii_Enemies <- data.frame (
Enemy_Name = c("Goomba", "Cheep Cheep", "Piranha Plant"),
First_Appearance = c("W 1-1", "W 1-4", "W 1-2"),
Last_Appearance = c("W 9-8", "W 8-4", "W 9-7")
)
# Print the data frame
# NSMBWii_Enemies
# Add a new row to the data frame
New_Row_Enemy <- rbind(NSMBWii_Enemies, c("Swoop", "W 5-2", "W 6-6"))
# Print the new row
New_Row_Enemy
# Add a new column
New_Col_Enemy <- cbind(NSMBWii_Enemies, Habitat = c("Grassland", "Water", "Various", "Underground"))
# Create a data frame
NSMBWii_Enemies <- data.frame (
Enemy_Name = c("Goomba", "Cheep Cheep", "Piranha Plant"),
First_Appearance = c("W 1-1", "W 1-4", "W 1-2"),
Last_Appearance = c("W 9-8", "W 8-4", "W 9-7")
)
# Print the data frame
# NSMBWii_Enemies
# Add a new row to the data frame
# New_Row_Enemy <- rbind(NSMBWii_Enemies, c("Swoop", "W 5-2", "W 6-6"))
# Print the new row
# New_Row_Enemy
# Add a new column
New_Col_Enemy <- cbind(NSMBWii_Enemies, Habitat = c("Grassland", "Water", "Various", "Underground"))
"Hello World!"
# Create a data frame
NSMBWii_Enemies <- data.frame (
Enemy_Name = c("Goomba", "Cheep Cheep", "Piranha Plant"),
First_Appearance = c("W 1-1", "W 1-4", "W 1-2"),
Last_Appearance = c("W 9-8", "W 8-4", "W 9-7")
)
# Print the data frame
NSMBWii_Enemies
# Create a data frame
NSMBWii_Enemies <- data.frame (
Enemy_Name = c("Goomba", "Cheep Cheep", "Piranha Plant"),
First_Appearance = c("W 1-1", "W 1-4", "W 1-2"),
Last_Appearance = c("W 9-8", "W 8-4", "W 9-7")
)
# Print the data frame
# NSMBWii_Enemies
# Add a new row to the data frame
New_Row_Enemy <- rbind(NSMBWii_Enemies, c("Swoop", "W 5-2", "W 6-6"))
# Print the new row
New_Row_Enemy
# Create a data frame
NSMBWii_Enemies <- data.frame (
Enemy_Name = c("Goomba", "Cheep Cheep", "Piranha Plant"),
First_Appearance = c("W 1-1", "W 1-4", "W 1-2"),
Last_Appearance = c("W 9-8", "W 8-4", "W 9-7")
)
# Print the data frame
# NSMBWii_Enemies
# Add a new row to the data frame
# New_Row_Enemy <- rbind(NSMBWii_Enemies, c("Swoop", "W 5-2", "W 6-6"))
# Print the new row
# New_Row_Enemy
# Add a new column
New_Col_Enemy <- cbind(NSMBWii_Enemies, Habitat = c("Grassland", "Water", "Various", "Underground"))
# Add a new column
New_Col_Enemy <- cbind(NSMBWii_Enemies, Habitat = c("Grassland", "Water", "Various", "Underground"))
# Add a new column
New_Col_Enemy <- cbind(NSMBWii_Enemies, Habitat = c("Grassland", "Water", "Various"))
# Print the new column
New_Col_Enemy
cat("\014")
getwd()
getwd()
setwd("~/BYU-Idaho/2023 Spring Semester/CSE 310 - Applied Programming/R Program")
hp_books <- read.csv("hp_books.csv", header = TRUE, sep = ",")
hp_books
View(hp_books)
View(hp_books)
